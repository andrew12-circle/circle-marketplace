// @ts-nocheck
// This file is automatically generated. Do not edit it directly.
import { createClient, type Session } from '@supabase/supabase-js';

const SUPABASE_URL = "https://ihzyuyfawapweamqzzlj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imloenl1eWZhd2Fwd2VhbXF6emxqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM3NTA4MTcsImV4cCI6MjA2OTMyNjgxN30.0JJSfqwd1lwI0KB5vcex_xqO-YoTfcaU95HtX9nyl_s";

const isLovablePreview = typeof window !== 'undefined' && window.location.hostname.includes('lovable.app');

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: isLovablePreview ? sessionStorage : localStorage,
    persistSession: true,
    autoRefreshToken: true,
    flowType: 'pkce',
    detectSessionInUrl: true,
    storageKey: 'circle-auth-v1'
  }
});

/** Helper to always use a fresh session */
export async function getFreshSession(): Promise<Session | null> {
  const { data: { session } } = await supabase.auth.getSession();
  return session ?? null;
}